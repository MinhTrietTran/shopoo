const mongoose = require('mongoose');
const Product = require('../src/models/Product');
const User = require('../src/models/User');
const bcrypt = require('bcrypt');
require('dotenv').config();

// Connect to MongoDB
const connectDB = async () => {
    try {
        const mongoUri = process.env.MONGODB_URI || 'mongodb://admin:password123@mongodb:27017/shopoo?authSource=admin';
        await mongoose.connect(mongoUri);
        console.log('üì¶ ƒê√£ k·∫øt n·ªëi MongoDB');
    } catch (error) {
        console.error('‚ùå L·ªói k·∫øt n·ªëi MongoDB:', error.message);
        // Retry connection for Docker environment
        console.log('üîÑ Th·ª≠ k·∫øt n·ªëi l·∫°i sau 5 gi√¢y...');
        setTimeout(async () => {
            try {
                const mongoUri = process.env.MONGODB_URI || 'mongodb://admin:password123@mongodb:27017/shopoo?authSource=admin';
                await mongoose.connect(mongoUri);
                console.log('üì¶ ƒê√£ k·∫øt n·ªëi MongoDB (l·∫ßn th·ª≠ l·∫°i)');
            } catch (retryError) {
                console.error('‚ùå V·∫´n kh√¥ng th·ªÉ k·∫øt n·ªëi MongoDB:', retryError.message);
                process.exit(1);
            }
        }, 5000);
    }
};

const seedProducts = async () => {
    await connectDB();

    try {
        console.log('üå± B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu s·∫£n ph·∫©m...');

        // Clear existing products (only if any exist)
        const existingCount = await Product.countDocuments();
        if (existingCount > 0) {
            await Product.deleteMany({});
            console.log(`üóëÔ∏è  ƒê√£ x√≥a ${existingCount} s·∫£n ph·∫©m c≈©`);
        }

        // Create a simple seller account if not exists  
        let seller;
        try {
            seller = await User.findOne({ email: 'seller@shopoo.com' });
            if (!seller) {
                const hashedPassword = await bcrypt.hash('password123', 10);
                seller = await User.create({
                    name: 'C·ª≠a h√†ng Demo',
                    email: 'seller@shopoo.com',
                    password: hashedPassword,
                    role: 'seller',
                    shopName: 'Shop Demo Store',
                    isVerified: true,
                    profile: {
                        phone: '0901234567',
                        address: {
                            street: '123 ƒê∆∞·ªùng Demo',
                            city: 'H·ªì Ch√≠ Minh',
                            country: 'Vi·ªát Nam'
                        }
                    }
                });
                console.log('üë§ ƒê√£ t·∫°o t√†i kho·∫£n seller demo');
            } else {
                console.log('üë§ S·ª≠ d·ª•ng t√†i kho·∫£n seller c√≥ s·∫µn');
            }
        } catch (userError) {
            console.warn('‚ö†Ô∏è  Kh√¥ng th·ªÉ t·∫°o seller, s·ª≠ d·ª•ng ObjectId gi·∫£:', userError.message);
            // T·∫°o fake ObjectId n·∫øu kh√¥ng th·ªÉ t·∫°o user
            seller = { _id: new mongoose.Types.ObjectId('507f1f77bcf86cd799439011') };
        }

        // Sample products data - simplified
        const sampleProducts = [
            {
                name: 'iPhone 15 Pro Max',
                description: 'iPhone 15 Pro Max l√† chi·∫øc smartphone flagship m·ªõi nh·∫•t c·ªßa Apple, ƒë∆∞·ª£c trang b·ªã chip A17 Pro m·∫°nh m·∫Ω, camera chuy√™n nghi·ªáp v√† thi·∫øt k·∫ø titanium cao c·∫•p.',
                shortDescription: 'Smartphone cao c·∫•p m·ªõi nh·∫•t t·ª´ Apple v·ªõi chip A17 Pro',
                price: 29990000,
                category: 'electronics',
                seller: seller._id,
                status: 'active',
                images: [
                    { url: 'https://via.placeholder.com/400x400/1a1a1a/ffffff?text=iPhone+15+Pro', alt: 'iPhone 15 Pro Max' }
                ],
                specifications: [
                    { name: 'M√†n h√¨nh', value: '6.7 inch Super Retina XDR' },
                    { name: 'Chip', value: 'A17 Pro' }
                ],
                stock: { quantity: 50 },
                featured: true,
                seo: { slug: 'iphone-15-pro-max' }
            },
            {
                name: 'Samsung Galaxy S24 Ultra',
                description: 'Samsung Galaxy S24 Ultra l√† si√™u ph·∫©m Android v·ªõi camera 200MP, S Pen t√≠ch h·ª£p v√† hi·ªáu nƒÉng m·∫°nh m·∫Ω t·ª´ chip Snapdragon 8 Gen 3.',
                shortDescription: 'Smartphone Android flagship v·ªõi S Pen v√† camera 200MP',
                price: 26990000,
                category: 'electronics',
                seller: seller._id,
                status: 'active',
                seller: seller._id,
                images: [
                    { url: 'https://via.placeholder.com/400x400/0066cc/ffffff?text=Galaxy+S24', alt: 'Samsung Galaxy S24 Ultra' }
                ],
                specifications: [
                    { name: 'M√†n h√¨nh', value: '6.8 inch Dynamic AMOLED 2X' },
                    { name: 'Camera', value: '200MP + 50MP + 12MP + 10MP' }
                ],
                stock: { quantity: 30 },
                featured: true,
                seo: { slug: 'samsung-galaxy-s24-ultra' }
            },
            {
                name: 'MacBook Air M3',
                description: 'MacBook Air M3 mang ƒë·∫øn hi·ªáu nƒÉng v∆∞·ª£t tr·ªôi v·ªõi chip M3, thi·∫øt k·∫ø m·ªèng nh·∫π v√† th·ªùi l∆∞·ª£ng pin ·∫•n t∆∞·ª£ng l√™n ƒë·∫øn 18 gi·ªù.',
                shortDescription: 'Laptop m·ªèng nh·∫π v·ªõi chip M3 m·∫°nh m·∫Ω',
                price: 28990000,
                category: 'electronics',
                seller: seller._id,
                status: 'active',
                images: [
                    { url: 'https://via.placeholder.com/400x400/c0c0c0/000000?text=MacBook+Air', alt: 'MacBook Air M3' }
                ],
                specifications: [
                    { name: 'Chip', value: 'Apple M3' },
                    { name: 'RAM', value: '8GB' }
                ],
                stock: { quantity: 25 },
                discount: { percentage: 8 },
                seo: { slug: 'macbook-air-m3' }
            },
            {
                name: 'Sony WH-1000XM5',
                description: 'Sony WH-1000XM5 v·ªõi c√¥ng ngh·ªá ch·ªëng ·ªìn t√≠ch c·ª±c t·ªët nh·∫•t trong ph√¢n kh√∫c, ch·∫•t l∆∞·ª£ng √¢m thanh Hi-Res v√† th·ªùi l∆∞·ª£ng pin 30 gi·ªù.',
                shortDescription: 'Tai nghe ch·ªëng ·ªìn h√†ng ƒë·∫ßu th·∫ø gi·ªõi',
                price: 7990000,
                category: 'electronics',
                seller: seller._id,
                status: 'active',
                images: [
                    { url: 'https://via.placeholder.com/400x400/000000/ffffff?text=Sony+WH1000XM5', alt: 'Sony WH-1000XM5' }
                ],
                specifications: [
                    { name: 'Driver', value: '30mm' },
                    { name: 'Pin', value: '30 gi·ªù' }
                ],
                stock: { quantity: 40 },
                discount: { percentage: 15 },
                featured: true,
                seo: { slug: 'sony-wh-1000xm5' }
            },
            {
                name: 'Nike Air Force 1',
                description: 'Nike Air Force 1 - ƒë√¥i gi√†y th·ªÉ thao kinh ƒëi·ªÉn v·ªõi thi·∫øt k·∫ø timeless v√† ƒë·ªô b·ªÅn cao, ph√π h·ª£p cho m·ªçi ho·∫°t ƒë·ªông h√†ng ng√†y.',
                shortDescription: 'Gi√†y th·ªÉ thao kinh ƒëi·ªÉn t·ª´ Nike',
                price: 2890000,
                category: 'fashion',
                seller: seller._id,
                status: 'active',
                images: [
                    { url: 'https://via.placeholder.com/400x400/ffffff/000000?text=Air+Force+1', alt: 'Nike Air Force 1' }
                ],
                specifications: [
                    { name: 'Ch·∫•t li·ªáu', value: 'Da th·∫≠t v√† synthetic' },
                    { name: 'C√¥ng ngh·ªá', value: 'Air Sole' }
                ],
                stock: { quantity: 100 },
                discount: { percentage: 20 },
                featured: true,
                seo: { slug: 'nike-air-force-1' }
            }
        ];

        // Add random views and ratings to products
        const productsWithMetrics = sampleProducts.map(product => ({
            ...product,
            views: Math.floor(Math.random() * 1000) + 100,
            rating: {
                average: Math.floor(Math.random() * 2) + 4, // 4-5 stars
                count: Math.floor(Math.random() * 100) + 10
            }
        }));

        // Insert products
        const insertedProducts = await Product.insertMany(productsWithMetrics);
        console.log(`‚úÖ ƒê√£ t·∫°o ${insertedProducts.length} s·∫£n ph·∫©m m·∫´u`);

        // Update products with some sales data
        for (let i = 0; i < insertedProducts.length; i++) {
            const soldCount = Math.floor(Math.random() * 20);
            if (soldCount > 0) {
                await Product.findByIdAndUpdate(insertedProducts[i]._id, {
                    $inc: {
                        'stock.sold': soldCount,
                        'stock.quantity': -soldCount
                    }
                });
            }
        }

        console.log('üéâ Seed d·ªØ li·ªáu s·∫£n ph·∫©m ho√†n t·∫•t!');
        console.log('üìä Th·ªëng k√™:');
        console.log(`   - T·ªïng s·∫£n ph·∫©m: ${insertedProducts.length}`);
        console.log(`   - Danh m·ª•c: Electronics, Fashion, Home, Books`);
        console.log(`   - S·∫£n ph·∫©m n·ªïi b·∫≠t: ${insertedProducts.filter(p => p.featured).length}`);
        console.log(`   - S·∫£n ph·∫©m c√≥ gi·∫£m gi√°: ${insertedProducts.filter(p => p.discount.percentage > 0).length}`);

    } catch (error) {
        console.error('‚ùå L·ªói khi seed d·ªØ li·ªáu:', error);
    } finally {
        mongoose.disconnect();
    }
};

// Run the seed function
seedProducts();
